# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
    # The most common configuration options are documented and commented below.
    # For a complete reference, please see the online documentation at
    # https://docs.vagrantup.com.

    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://vagrantcloud.com/search.
    config.vm.box = "lint-sandbox"
    config.vm.provider "virtualbox"

    # Disable automatic box update checking. If you disable this, then
    # boxes will only be checked for updates when the user runs
    # `vagrant box outdated`. This is not recommended.
    config.vm.box_check_update = false

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    # NOTE: This will enable public access to the opened port
    # config.vm.network "forwarded_port", guest: 80, host: 8080

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine and only allow access
    # via 127.0.0.1 to disable public access
    #config.vm.network "forwarded_port", guest: 80, host: 80, host_ip: "127.0.0.1"

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    config.vm.network "private_network", ip: "192.168.112.14"

    # Vagrant ssh
    config.ssh.username = "cit"
    config.ssh.private_key_path = "/Users/huangyingw/.ssh/github_id_rsa"

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # config.vm.network "public_network"

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    # Not recommended
    # config.vm.synced_folder "../imvu/website-project/website", "/home/cit/imvu/website-project/website"

    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    #
    # config.vm.provider "virtualbox" do |vb|
    #   # Display the VirtualBox GUI when booting the machine
    #   vb.gui = true
    #
    #   # Customize the amount of memory on the VM:
    #   vb.memory = "1024"
    # end
    #
    # View the documentation for the provider you are using for more
    # information on available options.

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    # config.vm.provision "process", type:"shell", privileged: false,
    #     inline: <<-SHELL
    #    git clone ssh://git@bitbucket.corp.imvu.com:7999/infra/process.git /home/cit/imvu/process
    # SHELL

    # config.vm.provision "imq", type:"shell", privileged: false,
    #     inline: <<-SHELL
    #    git clone git@github.com:imvu/imq.git  /home/cit/imvu/imq
    #    pushd /home/cit/imvu/imq
    #    git submodule init && git submodule update
    #    popd
    # SHELL

    # config.vm.provision "slave_bootstrap", type:"shell", privileged: false,
    #     inline: <<-SHELL
    #    git clone ssh://git@bitbucket.corp.imvu.com:7999/infra/slave_bootstrap.git /home/cit/imvu/slave_bootstrap
    # SHELL

    # config.vm.provision "cfagent", type:"shell",
    #     inline: <<-SHELL
    #    cfagent
    # SHELL

    # config.vm.provision "website-project", type:"shell", privileged: false,
    #     inline: <<-SHELL
    #    pushd /home/cit/imvu
    #    git clone ssh://git@bitbucket.corp.imvu.com:7999/eng/website.git website-project/website
    #    pushd website
    #    iclient --insanity sync
    #    popd
    #    popd
    # SHELL

    # config.vm.provision "install-samba", type:"shell", run: "never", privileged: true,
    #     inline: <<-SHELL
    #    apt-get -y install samba
    #    cp /home/cit/smb.conf /etc/samba
    #    restart smbd
    #    restart nmbd
    # SHELL

end
