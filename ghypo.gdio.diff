diff --git a/bashrc/generate_files_proj.sh b/bashrc/generate_files_proj.sh
index 83e2c748..71ea722d 100755
--- ./bashrc/generate_files_proj.sh
+++ ./bashrc/generate_files_proj.sh
@@ -46,12 +46,12 @@ done < "$INCLUDE_FILE"
 export LC_ALL=C
 
 find . "(" "${prune_params[@]}" ")" -a -prune -o -size +0 -type f -exec grep -Il "" {} + | sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' > "$TARGET" && \
-    comm -23 <(sort "$TARGET") <(sort "$PRUNE_FILE") > "$TARGET.tmp" && \
-    cp -fv "$TARGET.tmp" "$TARGET" && \
     if [ ${#include_params[@]} -gt 0 ] ; \
     then \
         find . "(" "${include_params[@]}" ")" -type f -size -9000k | sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' >> ${TARGET} ; \
         fi && \
+        comm -23 <(sort "$TARGET") <(sort "$PRUNE_FILE") > "$TARGET.tmp" && \
+        cp -fv "$TARGET.tmp" "$TARGET" && \
         echo "$(~/loadrc/gitrc/get_current_branch.sh).gdio.diff" | sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' >> ${TARGET} && \
         sort -u "$TARGET" -o "$TARGET" && \
         sed -i.bak 's/ /\\ /g' "$TARGET" && \
diff --git a/gitrc/.gitconfig b/gitrc/.gitconfig
index ca91dbaf..eda62d25 100755
--- ./gitrc/.gitconfig
+++ ./gitrc/.gitconfig
@@ -90,3 +90,5 @@
     prompt = false
 [merge "ours"]
 	driver = true
+[credential "https://github.com"]
+	helper = !gh auth git-credential
diff --git a/gitrc/dogdio.sh b/gitrc/dogdio.sh
index 4f8edfc6..12e3635f 100755
--- ./gitrc/dogdio.sh
+++ ./gitrc/dogdio.sh
@@ -1,5 +1,6 @@
 #!/bin/zsh
-if [ -z $(git config gsync.remote) ] || [ -z $(git config gsync.branch) ] 
+
+if [ -z $(git config gsync.target) ]
 then
     exit 0
 fi
@@ -7,9 +8,8 @@ fi
 local_branch="$(~/loadrc/gitrc/get_current_branch.sh)" 
 output="$local_branch.gdio.diff"
 output=$(echo "$output" | sed 's/\//_/g')
-remote_branch="$(git config gsync.branch)"
-remote="$(git config gsync.remote)"
+target="$(git config gsync.target)"
 
-~/loadrc/gitrc/gdi.sh "$remote/$remote_branch" 2>&1 | tee "$output"  
+~/loadrc/gitrc/gdi.sh "$target" 2>&1 | tee "$output"  
 sed -i.bak "s/^--- a\//--- \.\//g;s/^+++ b\//+++ \.\//g" "$output"
 exit 0
diff --git a/gitrc/gdi2.sh b/gitrc/gdi2.sh
index d4909739..2e325ba5 100755
--- ./gitrc/gdi2.sh
+++ ./gitrc/gdi2.sh
@@ -18,9 +18,9 @@ fi
 
 targetBranch=$(echo "$currentBranch" | sed 's/\.fix$//g')
 
-if [ -z $(git config gsync.remote) ]
+if [ -z $(git config gsync.target) ]
 then
-    echo -e "${red}gsync.remote is not configured ... ${NC}"
+    echo -e "${red}gsync.target is not configured ... ${NC}"
 fi
 
 host=$(git config deploy.host)
diff --git a/gitrc/gdit.sh b/gitrc/gdit.sh
index 700d6af6..6c65a66c 100755
--- ./gitrc/gdit.sh
+++ ./gitrc/gdit.sh
@@ -3,14 +3,13 @@ output="$1"
 current_branch="$(~/loadrc/gitrc/get_current_branch.sh)"
 target_branch=$(echo "$current_branch" | sed 's/\.fix$//g')
 remote="$(git config gsync.remote)"
-remote_branch="$(git config gsync.branch)"
+target="$(git config gsync.target)"
 
 ~/loadrc/gitrc/discard_unnecessaries.sh
 git checkout -b "$target_branch" "$remote/$target_branch"
-git checkout -b "$target_branch" "$remote/$remote_branch"
 git checkout -f "$target_branch"
 git branch -u "$remote/$target_branch"
-git merge -X theirs "$remote/$remote_branch" && \
+git merge -X theirs "$target" && \
     git pull && \
     git push ; \
     git checkout "$current_branch" && \
diff --git a/gitrc/gpl.sh b/gitrc/gpl.sh
index 4f53bd55..9aab14ed 100755
--- ./gitrc/gpl.sh
+++ ./gitrc/gpl.sh
@@ -18,10 +18,9 @@ do
     eval "$COMMAND"
 done
 
-remote=$(git config gsync.remote)
-remote_branch=$(git config gsync.branch)
+target=$(git config gsync.target)
 
-if [ -n "$remote" ]
+if [ -n "$target" ]
 then
-    git merge "$remote"/"$remote_branch"
+    git merge "$target"
 fi
diff --git a/imvurc/ghypo.sh b/imvurc/ghypo.sh
index ea2bc967..4aacf3b0 100755
--- ./imvurc/ghypo.sh
+++ ./imvurc/ghypo.sh
@@ -1,4 +1,10 @@
 #!/bin/zsh
+
+if [[ "$(git config remote.origin.url)" != *'website.git' ]]
+then
+    echo -e "${red}ghypo only run for imvu website repo... ${NC}" 
+fi
+
 if [ $(hostname) != "linb-sandbox" ]
 then
     if [[ -n "$host" ]] && [[ "$host" != "localhost" ]]
diff --git a/install_basic_linux.sh b/install_basic_linux.sh
index 34269226..7370103f 100755
--- ./install_basic_linux.sh
+++ ./install_basic_linux.sh
@@ -10,6 +10,7 @@ then
 fi
 
 ./install_prerequisite.sh
+./install_gh.sh
 ./install_nodejs.sh
 ./install_time_machine.sh
 ./enpass_install.sh
diff --git a/install_basic_macos.sh b/install_basic_macos.sh
index 94af8469..ac4412e5 100755
--- ./install_basic_macos.sh
+++ ./install_basic_macos.sh
@@ -16,6 +16,8 @@ brew install \
     mosh \
     tmux
 
+./deploy_configurations.sh
+
 brew install \
     Caskroom/cask/xquartz \
     astyle \
diff --git a/install_gh.sh b/install_gh.sh
new file mode 100755
index 00000000..c3363697
--- /dev/null
+++ ./install_gh.sh
@@ -0,0 +1,6 @@
+#!/bin/bash
+
+curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg |  gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
+echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" |  tee /etc/apt/sources.list.d/github-cli.list > /dev/null
+apt update
+apt install gh
diff --git a/install_prerequisite.sh b/install_prerequisite.sh
index e2824b9e..49656e55 100755
--- ./install_prerequisite.sh
+++ ./install_prerequisite.sh
@@ -1,6 +1,13 @@
 #!/bin/bash
 
 apt-get update
+apt-get install -y \
+    mosh \
+    ssh \
+    tmux
+
+./deploy_configurations.sh
+
 apt-get upgrade -y
 apt-get purge -y totem totem-plugins
 apt-get install -y \
@@ -36,7 +43,6 @@ apt-get install -y \
     manpages-fr-extra \
     manpages-pl \
     mdadm \
-    mosh \
     mplayer \
     net-tools \
     netcat \
@@ -54,10 +60,8 @@ apt-get install -y \
     slurm \
     smplayer \
     software-properties-common \
-    ssh \
     sshfs \
     tig \
-    tmux \
     unrar \
     w3m \
     w3m-img \
diff --git a/vimrc/.vim/plugin/fugitive.vim b/vimrc/.vim/plugin/fugitive.vim
index f53036fd..cd6d7554 100644
--- ./vimrc/.vim/plugin/fugitive.vim
+++ ./vimrc/.vim/plugin/fugitive.vim
@@ -112,13 +112,12 @@ endfunction
 
 function! s:Gkdo() abort
     let worktree = Cd2Worktree()
-    let remote = substitute(system("git config gsync.remote"), '\n', '', '')
-    let branch = substitute(system("git config gsync.branch"), '\n', '', '')
+    let target = substitute(system("git config gsync.target"), '\n', '', '')
 
     if expand('%:t') != 'index'
-        call asyncrun#run('<bang>', '', '~/loadrc/gitrc/gkd.sh ' . '"' .  remote . '/' . branch . '" "' .  expand('%:p') . '"')
+        call asyncrun#run('<bang>', '', '~/loadrc/gitrc/gkd.sh ' . '"' .  target . '" "' .  expand('%:p') . '"')
     else
-        call asyncrun#run('<bang>', '', '~/loadrc/gitrc/gkd.sh ' . '"' .  remote . '/' . branch . '"')
+        call asyncrun#run('<bang>', '', '~/loadrc/gitrc/gkd.sh ' . '"' .  target . '"')
     endif
 endfunction
 
@@ -367,9 +366,8 @@ function! s:Gdi(...) abort
         if arg1 == ''
             call fugitive#Diffsplit(0, 1, "vert", '', [])
         elseif tolower(arg1) == 'o'
-            let remote = substitute(system("git config gsync.remote"), '\n', '', '')
-            let remote_branch = substitute(system("git config gsync.branch"), '\n', '', '')
-            call fugitive#Diffsplit(1, 0, 'vert', remote . '/' . remote_branch, [remote . '/' . remote_branch])
+            let target = substitute(system("git config gsync.target"), '\n', '', '')
+            call fugitive#Diffsplit(1, 0, 'vert', target, [target])
         else
             call fugitive#Diffsplit(0, 1, "vert", arg1, [arg1])
         endif
@@ -476,18 +474,17 @@ endfunction
 
 function! s:Gdif(...) abort
     let worktree = Cd2Worktree()
-    let remote = substitute(system("git config gsync.remote"), '\n', '', '')
-    let branch = substitute(system("git config gsync.branch"), '\n', '', '')
-    let branch = (a:0 >= 1) ? a:1 : remote . '/' . branch
+    let target = substitute(system("git config gsync.target"), '\n', '', '')
+    let target = (a:0 >= 1) ? a:1 : target
     let reverse = (a:0 >= 2) ? a:2 : ''
 
-    if branch ==# '-r'
-        let branch = remote . '/' . substitute(system("git config gsync.branch"), '\n', '', '')
+    if target ==# '-r'
+        let target = substitute(system("git config gsync.target"), '\n', '', '')
         let reverse = '-r'
     endif
 
-    let output = GetEscapedResult(branch) . '.diff'
-    exec '!~/loadrc/gitrc/gdif.sh ' . '-b "' .  branch . '" -f "' .  expand("%:p") . '" ' . reverse .  ' 2>&1 | tee ' . output
+    let output = GetEscapedResult(target) . '.diff'
+    exec '!~/loadrc/gitrc/gdif.sh ' . '-b "' .  target . '" -f "' .  expand("%:p") . '" ' . reverse .  ' 2>&1 | tee ' . output
     call OpenOrSwitch(output, 'vs')
 endfunction
 
