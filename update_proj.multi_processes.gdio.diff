diff --git a/bashrc/cscope.sh b/bashrc/cscope.sh
index ead60269..a1a89c27 100755
--- ./bashrc/cscope.sh
+++ ./bashrc/cscope.sh
@@ -1,7 +1,3 @@
 #!/bin/zsh
 
-CSCOPEFILE="cscopefile.bak"
-cscope -bq -i files.proj -f "$CSCOPEFILE" && \
-    cp -fv "$CSCOPEFILE" cscope.out && \
-    cp -fv "$CSCOPEFILE".in cscope.out.in && \
-    cp -fv "$CSCOPEFILE".po cscope.out.po
+~/loadrc/bashrc/check_running.sh ~/loadrc/bashrc/do_cscope.sh
diff --git a/bashrc/do_cscope.sh b/bashrc/do_cscope.sh
new file mode 100755
index 00000000..ead60269
--- /dev/null
+++ ./bashrc/do_cscope.sh
@@ -0,0 +1,7 @@
+#!/bin/zsh
+
+CSCOPEFILE="cscopefile.bak"
+cscope -bq -i files.proj -f "$CSCOPEFILE" && \
+    cp -fv "$CSCOPEFILE" cscope.out && \
+    cp -fv "$CSCOPEFILE".in cscope.out.in && \
+    cp -fv "$CSCOPEFILE".po cscope.out.po
diff --git a/bashrc/do_fdocs.sh b/bashrc/do_fdocs.sh
new file mode 100755
index 00000000..bee84cf0
--- /dev/null
+++ ./bashrc/do_fdocs.sh
@@ -0,0 +1,32 @@
+#! /bin/zsh
+
+FdocsInclude="fdocs.include"
+FdocsExclude="fdocs.exclude"
+TARGET="fdocs.list.bak"
+
+if [ ! -f "$FdocsInclude" ] || [ ! -f "$FdocsExclude" ]
+then
+    exit 0
+fi
+
+or="";
+
+while read suf
+do
+    suf=$(echo "$suf" | sed 's/"//g')
+    include_params+=( $or "-wholename" "$suf" )
+    or="-o"
+done < "$FdocsInclude"
+
+or="";
+
+while read suf
+do
+    suf=$(echo "$suf" | sed 's/"//g')
+    exclude_params+=( $or "-wholename" "$suf" )
+    or="-o"
+done < "$FdocsExclude"
+
+find . "(" "${exclude_params[@]}" ")" -a -prune -o "(" "${include_params[@]}" ")" -type f -print | sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' > "$TARGET" && \
+    sort -u "$TARGET" -o "$TARGET" && \
+    cp -fv "$TARGET" fdocs.list
diff --git a/bashrc/do_fvideos.sh b/bashrc/do_fvideos.sh
new file mode 100755
index 00000000..38fb060b
--- /dev/null
+++ ./bashrc/do_fvideos.sh
@@ -0,0 +1,9 @@
+#! /bin/zsh
+
+FAVLOG="fav.log.bak"
+FAVLOGSORT="fav.log.sort.bak"
+export LC_ALL=C
+find . -type f -size +500k -exec du -h {} + | sort -r -h | cut -f 2 | sed 's/\(["\]\)/\\\1/g;s/.*/"&"/' > "$FAVLOG" && \
+    cp -fv "$FAVLOG" fav.log && \
+    find . -type f -size +500k -exec ls -t {} \+ | sed 's/\(["\]\)/\\\1/g;s/.*/"&"/' > "$FAVLOGSORT" && \
+    cp -fv "$FAVLOGSORT" fav.log.sort
diff --git a/bashrc/do_generate_files_proj.sh b/bashrc/do_generate_files_proj.sh
new file mode 100755
index 00000000..5f5f2924
--- /dev/null
+++ ./bashrc/do_generate_files_proj.sh
@@ -0,0 +1,60 @@
+#!/bin/zsh
+
+if [ -z "$1" ]
+then
+    TARGETEDIR=`realpath "$PWD"`
+else
+    TARGETEDIR=`realpath "$1"`
+fi
+
+cd "$TARGETEDIR"
+
+if [ ! -f files.proj ]
+then
+    echo -e "${red}No files.proj file here, will not build the index ... ${NC}"
+    exit 1
+fi
+
+TARGETEDIR=`realpath "$PWD"`
+cp -nv ~/loadrc/prunefix_template.conf ./prunefix.conf
+cp -nv ~/loadrc/prunefile_template.conf ./prunefile.conf
+cp -nv ~/loadrc/includefile_template.conf ./includefile.conf
+cp -nv ~/loadrc/setup.cfg ./setup.cfg
+TARGET=files.proj.bak
+PRUNE_POSTFIX=prunefix.conf
+PRUNE_FILE=prunefile.conf
+INCLUDE_FILE=includefile.conf
+
+or="";
+
+[ -f "$PRUNE_POSTFIX" ] && while read suf
+do
+    suf=$(echo "$suf" | sed 's/"//g')
+    prune_params+=( $or "-wholename" "$suf" )
+    or="-o"
+done < "$PRUNE_POSTFIX"
+
+or="";
+
+[ -f "$INCLUDE_FILE" ] && while read suf
+do
+    suf=$(echo "$suf" | sed 's/"//g')
+    include_params+=( $or "-wholename" "$suf" )
+    or="-o"
+done < "$INCLUDE_FILE"
+
+export LC_ALL=C
+
+find . "(" "${prune_params[@]}" ")" -a -prune -o -size +0 -type f -exec grep -Il "" {} + | sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' > "$TARGET" && \
+    comm -23 <(sort "$TARGET") <(sort "$PRUNE_FILE") > "$TARGET.tmp" && \
+    cp -fv "$TARGET.tmp" "$TARGET" && \
+    if [ ${#include_params[@]} -gt 0 ] ; \
+    then \
+        find . "(" "${include_params[@]}" ")" -type f -size -9000k | sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' >> ${TARGET} ; \
+        fi && \
+        echo "$(git rev-parse --abbrev-ref HEAD).gdio.diff" | sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' >> ${TARGET} && \
+        sort -u "$TARGET" -o "$TARGET" && \
+        sed -i.bak 's/ /\\ /g' "$TARGET" && \
+        cp -fv "$TARGET" files.proj && \
+        echo "$TARGETEDIR"/files.proj | sed 's/\(["'\''\]\)/\\\1/g;s/ /\\ /g;s/.*/"&"/' >> ~/all.proj && \
+        sort -u ~/all.proj -o ~/all.proj
diff --git a/bashrc/do_generate_rsync_files.sh b/bashrc/do_generate_rsync_files.sh
new file mode 100755
index 00000000..d5360ed8
--- /dev/null
+++ ./bashrc/do_generate_rsync_files.sh
@@ -0,0 +1,39 @@
+#!/bin/zsh
+
+rsyncFiles=rsync.files.bak
+cat files.proj | sed 's/^"//g;s/"$//g;s/\\ / /g' > "$rsyncFiles"
+PRUNE_POSTFIX=prunefix.rsync
+INCLUDE_FILE=includefile.rsync
+
+touch "$PRUNE_POSTFIX"
+
+or="";
+
+[ -f "$PRUNE_POSTFIX" ] && while read suf
+do
+    suf=$(echo "$suf" | sed 's/"//g')
+    prune_params+=( $or "-wholename" "$suf" )
+    or="-o"
+done < "$PRUNE_POSTFIX"
+
+or="";
+
+[ -f "$INCLUDE_FILE" ] && while read suf
+do
+    suf=$(echo "$suf" | sed 's/"//g')
+    include_params+=( $or "-wholename" "$suf" )
+    or="-o"
+done < "$INCLUDE_FILE"
+
+if [ ${#prune_params[@]} -gt 0 ] ; \
+then \
+    find . "(" "${prune_params[@]}" ")" -type f -size -9000k > "$rsyncFiles.diff" && \
+    comm -23 <(sort "$rsyncFiles") <(sort "$rsyncFiles".diff) > "$rsyncFiles.tmp" && \
+    cp -fv "$rsyncFiles.tmp" "$rsyncFiles" ; \
+    fi && \
+    if [ ${#include_params[@]} -gt 0 ] ; \
+    then \
+        find . "(" "${include_params[@]}" ")" -type f | sed 's/\(["'\''\]\)/\\\1/g' >> "$rsyncFiles" && \
+        sort -u "$rsyncFiles" -o "$rsyncFiles" ; \
+        fi && \
+        cp -fv "$rsyncFiles" rsync.files
diff --git a/bashrc/do_update_proj.sh b/bashrc/do_update_proj.sh
deleted file mode 100755
index cbbd6cc8..00000000
--- ./bashrc/do_update_proj.sh
+++ /dev/null
@@ -1,7 +0,0 @@
-#!/bin/zsh
-
-~/loadrc/bashrc/generate_files_proj.sh
-~/loadrc/bashrc/fvideos.sh
-~/loadrc/bashrc/fdocs.sh
-~/loadrc/bashrc/cscope.sh
-~/loadrc/bashrc/generate_rsync_files.sh
diff --git a/bashrc/fcscope.sh b/bashrc/fcscope.sh
index ca4becd7..b248a3d2 100755
--- ./bashrc/fcscope.sh
+++ ./bashrc/fcscope.sh
@@ -3,5 +3,5 @@ cscopes=($(find . -type f -name files.proj))
 for cscope in "${cscopes[@]}"
 do
   echo "${cscope}"
-  ~/loadrc/bashrc/do_update_proj.sh $(dirname "${cscope}")
+  ~/loadrc/bashrc/update_proj.sh $(dirname "${cscope}")
 done
diff --git a/bashrc/fdocs.sh b/bashrc/fdocs.sh
index bee84cf0..9e655786 100755
--- ./bashrc/fdocs.sh
+++ ./bashrc/fdocs.sh
@@ -1,32 +1,3 @@
 #! /bin/zsh
 
-FdocsInclude="fdocs.include"
-FdocsExclude="fdocs.exclude"
-TARGET="fdocs.list.bak"
-
-if [ ! -f "$FdocsInclude" ] || [ ! -f "$FdocsExclude" ]
-then
-    exit 0
-fi
-
-or="";
-
-while read suf
-do
-    suf=$(echo "$suf" | sed 's/"//g')
-    include_params+=( $or "-wholename" "$suf" )
-    or="-o"
-done < "$FdocsInclude"
-
-or="";
-
-while read suf
-do
-    suf=$(echo "$suf" | sed 's/"//g')
-    exclude_params+=( $or "-wholename" "$suf" )
-    or="-o"
-done < "$FdocsExclude"
-
-find . "(" "${exclude_params[@]}" ")" -a -prune -o "(" "${include_params[@]}" ")" -type f -print | sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' > "$TARGET" && \
-    sort -u "$TARGET" -o "$TARGET" && \
-    cp -fv "$TARGET" fdocs.list
+~/loadrc/bashrc/check_running.sh ~/loadrc/bashrc/do_fdocs.sh
diff --git a/bashrc/fvideos.sh b/bashrc/fvideos.sh
index 38fb060b..136824ee 100755
--- ./bashrc/fvideos.sh
+++ ./bashrc/fvideos.sh
@@ -1,9 +1,3 @@
 #! /bin/zsh
 
-FAVLOG="fav.log.bak"
-FAVLOGSORT="fav.log.sort.bak"
-export LC_ALL=C
-find . -type f -size +500k -exec du -h {} + | sort -r -h | cut -f 2 | sed 's/\(["\]\)/\\\1/g;s/.*/"&"/' > "$FAVLOG" && \
-    cp -fv "$FAVLOG" fav.log && \
-    find . -type f -size +500k -exec ls -t {} \+ | sed 's/\(["\]\)/\\\1/g;s/.*/"&"/' > "$FAVLOGSORT" && \
-    cp -fv "$FAVLOGSORT" fav.log.sort
+~/loadrc/bashrc/check_running.sh ~/loadrc/bashrc/do_fvideos.sh
diff --git a/bashrc/generate_files_proj.sh b/bashrc/generate_files_proj.sh
index 5f5f2924..03ba14ed 100755
--- ./bashrc/generate_files_proj.sh
+++ ./bashrc/generate_files_proj.sh
@@ -1,60 +1,3 @@
 #!/bin/zsh
 
-if [ -z "$1" ]
-then
-    TARGETEDIR=`realpath "$PWD"`
-else
-    TARGETEDIR=`realpath "$1"`
-fi
-
-cd "$TARGETEDIR"
-
-if [ ! -f files.proj ]
-then
-    echo -e "${red}No files.proj file here, will not build the index ... ${NC}"
-    exit 1
-fi
-
-TARGETEDIR=`realpath "$PWD"`
-cp -nv ~/loadrc/prunefix_template.conf ./prunefix.conf
-cp -nv ~/loadrc/prunefile_template.conf ./prunefile.conf
-cp -nv ~/loadrc/includefile_template.conf ./includefile.conf
-cp -nv ~/loadrc/setup.cfg ./setup.cfg
-TARGET=files.proj.bak
-PRUNE_POSTFIX=prunefix.conf
-PRUNE_FILE=prunefile.conf
-INCLUDE_FILE=includefile.conf
-
-or="";
-
-[ -f "$PRUNE_POSTFIX" ] && while read suf
-do
-    suf=$(echo "$suf" | sed 's/"//g')
-    prune_params+=( $or "-wholename" "$suf" )
-    or="-o"
-done < "$PRUNE_POSTFIX"
-
-or="";
-
-[ -f "$INCLUDE_FILE" ] && while read suf
-do
-    suf=$(echo "$suf" | sed 's/"//g')
-    include_params+=( $or "-wholename" "$suf" )
-    or="-o"
-done < "$INCLUDE_FILE"
-
-export LC_ALL=C
-
-find . "(" "${prune_params[@]}" ")" -a -prune -o -size +0 -type f -exec grep -Il "" {} + | sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' > "$TARGET" && \
-    comm -23 <(sort "$TARGET") <(sort "$PRUNE_FILE") > "$TARGET.tmp" && \
-    cp -fv "$TARGET.tmp" "$TARGET" && \
-    if [ ${#include_params[@]} -gt 0 ] ; \
-    then \
-        find . "(" "${include_params[@]}" ")" -type f -size -9000k | sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' >> ${TARGET} ; \
-        fi && \
-        echo "$(git rev-parse --abbrev-ref HEAD).gdio.diff" | sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' >> ${TARGET} && \
-        sort -u "$TARGET" -o "$TARGET" && \
-        sed -i.bak 's/ /\\ /g' "$TARGET" && \
-        cp -fv "$TARGET" files.proj && \
-        echo "$TARGETEDIR"/files.proj | sed 's/\(["'\''\]\)/\\\1/g;s/ /\\ /g;s/.*/"&"/' >> ~/all.proj && \
-        sort -u ~/all.proj -o ~/all.proj
+~/loadrc/bashrc/check_running.sh ~/loadrc/bashrc/do_generate_files_proj.sh
diff --git a/bashrc/generate_rsync_files.sh b/bashrc/generate_rsync_files.sh
index d5360ed8..9adaee95 100755
--- ./bashrc/generate_rsync_files.sh
+++ ./bashrc/generate_rsync_files.sh
@@ -1,39 +1,3 @@
 #!/bin/zsh
 
-rsyncFiles=rsync.files.bak
-cat files.proj | sed 's/^"//g;s/"$//g;s/\\ / /g' > "$rsyncFiles"
-PRUNE_POSTFIX=prunefix.rsync
-INCLUDE_FILE=includefile.rsync
-
-touch "$PRUNE_POSTFIX"
-
-or="";
-
-[ -f "$PRUNE_POSTFIX" ] && while read suf
-do
-    suf=$(echo "$suf" | sed 's/"//g')
-    prune_params+=( $or "-wholename" "$suf" )
-    or="-o"
-done < "$PRUNE_POSTFIX"
-
-or="";
-
-[ -f "$INCLUDE_FILE" ] && while read suf
-do
-    suf=$(echo "$suf" | sed 's/"//g')
-    include_params+=( $or "-wholename" "$suf" )
-    or="-o"
-done < "$INCLUDE_FILE"
-
-if [ ${#prune_params[@]} -gt 0 ] ; \
-then \
-    find . "(" "${prune_params[@]}" ")" -type f -size -9000k > "$rsyncFiles.diff" && \
-    comm -23 <(sort "$rsyncFiles") <(sort "$rsyncFiles".diff) > "$rsyncFiles.tmp" && \
-    cp -fv "$rsyncFiles.tmp" "$rsyncFiles" ; \
-    fi && \
-    if [ ${#include_params[@]} -gt 0 ] ; \
-    then \
-        find . "(" "${include_params[@]}" ")" -type f | sed 's/\(["'\''\]\)/\\\1/g' >> "$rsyncFiles" && \
-        sort -u "$rsyncFiles" -o "$rsyncFiles" ; \
-        fi && \
-        cp -fv "$rsyncFiles" rsync.files
+~/loadrc/bashrc/check_running.sh ~/loadrc/bashrc/do_generate_rsync_files.sh
diff --git a/bashrc/update_proj.sh b/bashrc/update_proj.sh
index 1c2673c0..7616cc61 100755
--- ./bashrc/update_proj.sh
+++ ./bashrc/update_proj.sh
@@ -1,2 +1,7 @@
 #!/bin/zsh
-~/loadrc/bashrc/check_running.sh ~/loadrc/bashrc/do_update_proj.sh
+
+~/loadrc/bashrc/generate_files_proj.sh &
+~/loadrc/bashrc/generate_rsync_files.sh &
+~/loadrc/bashrc/fvideos.sh &
+~/loadrc/bashrc/fdocs.sh &
+~/loadrc/bashrc/cscope.sh &
diff --git a/gitrc/gcl.sh b/gitrc/gcl.sh
index e118a4de..31f3ecba 100755
--- ./gitrc/gcl.sh
+++ ./gitrc/gcl.sh
@@ -22,7 +22,7 @@ cd "$target" && \
     git remote remove origin ; \
     $HOME/loadrc/gitrc/gcob.sh dev && \
     $HOME/loadrc/gitrc/gdev.sh && \
-    $HOME/loadrc/bashrc/do_update_proj.sh && \
+    $HOME/loadrc/bashrc/update_proj.sh && \
     git add . && \
     git add -f files.proj .gitconfig && \
     $HOME/loadrc/gitrc/g.sh && \
diff --git a/vimrc/.vim/bundle/vim-fugitive b/vimrc/.vim/bundle/vim-fugitive
index e8cff84f..921a29f0 160000
--- ./vimrc/.vim/bundle/vim-fugitive
+++ ./vimrc/.vim/bundle/vim-fugitive
@@ -1 +1 @@
-Subproject commit e8cff84f1bd2fa551a229289042357c700661c4d
+Subproject commit 921a29f0857afcff0c42262df4d640d0629d8a64
