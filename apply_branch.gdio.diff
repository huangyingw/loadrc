diff --git a/gitrc/apply_branch.sh b/gitrc/apply_branch.sh
new file mode 100755
index 00000000..39462a11
--- /dev/null
+++ ./gitrc/apply_branch.sh
@@ -0,0 +1,17 @@
+#!/bin/zsh
+BRANCH="$1"
+BRANCH=$(echo "$BRANCH" | sed 's/remotes\///g')
+BRANCH_DIFF=$(echo "$BRANCH" | sed 's/[^\/]*\///g')
+BRANCH_DIFF="$BRANCH_DIFF.gdio.diff"
+echo "BRANCH --> $BRANCH"
+echo "BRANCH_DIFF --> $BRANCH_DIFF"
+
+git show "$BRANCH":"$BRANCH_DIFF" > "$BRANCH_DIFF"
+retVal=$?
+
+if [ $retVal -ne 0 ]
+then
+    exit $retVal
+fi
+
+~/loadrc/gitrc/reapply.sh "$BRANCH_DIFF"
diff --git a/gitrc/apply_branch_test.sh b/gitrc/apply_branch_test.sh
new file mode 100755
index 00000000..c349f1e9
--- /dev/null
+++ ./gitrc/apply_branch_test.sh
@@ -0,0 +1,8 @@
+#!/bin/zsh
+SCRIPT=$(realpath "$0")
+SCRIPTPATH=$(dirname "$SCRIPT")
+cd "$SCRIPTPATH"
+
+cd ../
+~/loadrc/gitrc/apply_branch.sh github/generate_files_proj
+~/loadrc/gitrc/apply_branch.sh remotes/github/generate_files_proj
diff --git a/gitrc/reapply.sh b/gitrc/reapply.sh
index fc600652..d1ffbd95 100755
--- ./gitrc/reapply.sh
+++ ./gitrc/reapply.sh
@@ -1,7 +1,12 @@
 #!/bin/zsh
 DIFF="$1"
-git apply --reverse "$(~/loadrc/gitrc/get_current_branch.sh).gdio.diff" 
-git checkout -- "$DIFF"
+CURRET_BRANCH_DIFF="$(~/loadrc/gitrc/get_current_branch.sh).gdio.diff"
+git apply --reverse "$CURRET_BRANCH_DIFF" 
+git checkout -- "$CURRET_BRANCH_DIFF"
 git apply --reject --whitespace=fix "$DIFF"
 ~/loadrc/gitrc/gdio.sh
-git add "$DIFF"
+
+if [ "$CURRET_BRANCH_DIFF" = "$DIFF" ]
+then
+    git add "$CURRET_BRANCH_DIFF"
+fi
diff --git a/prunefile_template.conf b/prunefile_template.conf
index 2154bcb9..8e34f2fa 100644
--- ./prunefile_template.conf
+++ ./prunefile_template.conf
@@ -3,3 +3,4 @@
 "./running.lck"
 "./running.time"
 .err
+"./gbra.log"
diff --git a/vimrc/.vim/plugin/fugitive.vim b/vimrc/.vim/plugin/fugitive.vim
index e30c0539..bfd7f71e 100644
--- ./vimrc/.vim/plugin/fugitive.vim
+++ ./vimrc/.vim/plugin/fugitive.vim
@@ -52,6 +52,7 @@ command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Grtv :
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gs :execute s:Gs()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gsave :execute s:Gsave()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gshow :execute s:Gshow(<q-args>)
+command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject ApplyBranch :execute s:ApplyBranch(<q-args>)
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gst :execute s:Gst()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gsti :execute s:Gsti()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gstl :execute s:Gstl()
@@ -520,6 +521,12 @@ function! s:KdiffFile() abort
     call asyncrun#run('<bang>', '', '~/loadrc/leetcoderc/KdiffFile.py ' . '"' .  expand("%:p") . '"')
 endfunction
 
+function! s:ApplyBranch(args, ...) abort
+    let worktree = Cd2Worktree()
+    silent exec '!~/loadrc/gitrc/apply_branch.sh ' . '"' .  a:args . '"'
+    call s:Gs()
+endfunction
+
 function! s:Gshow(args, ...) abort
     let worktree = Cd2Worktree()
     let output = a:args . '.diff'
@@ -679,7 +686,6 @@ function! s:Reapply() abort
     let worktree = Cd2Worktree()
     exec '!~/loadrc/gitrc/reapply.sh ' . '"' .  expand("%:p") . '"'
     call s:Gs()
-    call s:Gdi()
 endfunction
 
 function! s:Split() abort
