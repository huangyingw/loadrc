diff --git a/.shellrc b/.shellrc
index 40f8ba93..52d99984 100755
--- ./.shellrc
+++ ./.shellrc
@@ -72,7 +72,7 @@ alias rsync_svn='$HOME/loadrc/bashrc/rsync_svn.sh'
 alias rsynctype='$HOME/loadrc/bashrc/rsynctype.sh'
 alias sancho=/opt/sancho-0.9.4-59-linux-gtk/sancho
 alias selectCopy='$HOME/loadrc/bashrc/select_copy.sh'
-alias selectMirror='$HOME/loadrc/bashrc/selectMirror.sh'
+alias selectmirror='$HOME/loadrc/bashrc/selectmirror.sh'
 alias sleep='$HOME/loadrc/bashrc/sleep.sh'
 alias sload='$HOME/loadrc/bashrc/sload.sh'
 alias smount='$HOME/loadrc/bashrc/smount.sh'
@@ -90,7 +90,7 @@ alias tmov='$HOME/loadrc/bashrc/tmove.sh'
 alias tnetsync='$HOME/loadrc/bashrc/tnetsync.sh'
 alias tosmirror='$HOME/loadrc/bashrc/tosmirror.sh'
 alias trsync_svn='$HOME/loadrc/bashrc/trsync_svn.sh'
-alias tselectMirror='$HOME/loadrc/bashrc/tselectMirror.sh'
+alias tselectmirror='$HOME/loadrc/bashrc/tselectmirror.sh'
 alias tubak='$HOME/loadrc/bashrc/tubak.sh'
 alias tures='$HOME/loadrc/bashrc/tures.sh'
 alias tusync='$HOME/loadrc/bashrc/tusync.sh'
diff --git a/bashrc/mirror.sh b/bashrc/mirror.sh
index e07b4653..889ade9a 100755
--- ./bashrc/mirror.sh
+++ ./bashrc/mirror.sh
@@ -12,7 +12,7 @@ TARGET=$2
 ready_file="$SOURCE"/"tmirror.ready"
 MIRRORCHECK=$HOME/loadrc/."`hostname`".mirror.check
 
-if [ -f ${MIRRORCHECK} ] && [ ! -f ${ready_file} ]
+if [ ! -f ${ready_file} ]
 then
     echo -e "${red}tmirror must be run before mirror ... ${NC}"
     exit 1
diff --git a/bashrc/selectMirror.sh b/bashrc/selectMirror.sh
deleted file mode 100755
index ece92b65..00000000
--- ./bashrc/selectMirror.sh
+++ /dev/null
@@ -1,10 +0,0 @@
-#!/bin/zsh 
-
-if [ "$#" -lt 2 ]
-then
-  echo -e "${red}Please specify enough parameter ... ${NC}"
-  exit 1
-fi
-SOURCE="$1"
-TARGET="$2"
-rsync -aHv --exclude-from=excludeFile --delete-during --force "$SOURCE"/  "$TARGET"/ | tee selectMirror.findresult
diff --git a/bashrc/selectmirror.sh b/bashrc/selectmirror.sh
new file mode 100755
index 00000000..01c61e8a
--- /dev/null
+++ ./bashrc/selectmirror.sh
@@ -0,0 +1,20 @@
+#!/bin/zsh 
+
+if [ "$#" -lt 2 ]
+then
+  echo -e "${red}Please specify enough parameter ... ${NC}"
+  exit 1
+fi
+
+SOURCE="$1"
+TARGET="$2"
+
+ready_file="$SOURCE/tselectmirror.ready"
+
+if [ ! -f ${ready_file} ]
+then
+    echo -e "${red}tmirror must be run before mirror ... ${NC}"
+    exit 1
+fi
+
+rsync -aHv --exclude-from="$SOURCE"/excludeFile --delete-during --force "$SOURCE"/  "$TARGET"/
diff --git a/bashrc/tselectMirror.sh b/bashrc/tselectMirror.sh
deleted file mode 100755
index a3d11f44..00000000
--- ./bashrc/tselectMirror.sh
+++ /dev/null
@@ -1,10 +0,0 @@
-#!/bin/zsh 
-
-if [ "$#" -lt 2 ]
-then
-  echo -e "${red}Please specify enough parameter ... ${NC}"
-  exit 1
-fi
-SOURCE="$1"
-TARGET="$2"
-rsync -aHvn --exclude-from=excludeFile --delete-during --force "$SOURCE"/  "$TARGET"/ | tee tselectMirror.findresult
diff --git a/bashrc/tselectmirror.sh b/bashrc/tselectmirror.sh
new file mode 100755
index 00000000..0a70e635
--- /dev/null
+++ ./bashrc/tselectmirror.sh
@@ -0,0 +1,13 @@
+#!/bin/zsh 
+
+if [ "$#" -lt 2 ]
+then
+  echo -e "${red}Please specify enough parameter ... ${NC}"
+  exit 1
+fi
+
+SOURCE="$1"
+TARGET="$2"
+ready_file="$SOURCE/tselectmirror.ready"
+
+rsync -aHvn --exclude-from="$SOURCE"/excludeFile --delete-during --force "$SOURCE"/  "$TARGET"/  > "$ready_file" 
diff --git a/gitrc/dogdio.sh b/gitrc/dogdio.sh
index 7163d50e..4f8edfc6 100755
--- ./gitrc/dogdio.sh
+++ ./gitrc/dogdio.sh
@@ -7,10 +7,9 @@ fi
 local_branch="$(~/loadrc/gitrc/get_current_branch.sh)" 
 output="$local_branch.gdio.diff"
 output=$(echo "$output" | sed 's/\//_/g')
-local_master="$(git config gsync.branch)"
+remote_branch="$(git config gsync.branch)"
 remote="$(git config gsync.remote)"
 
-git branch "$local_master" "$remote/$local_master"
-~/loadrc/gitrc/gdi.sh "$local_master" 2>&1 | tee "$output"  
+~/loadrc/gitrc/gdi.sh "$remote/$remote_branch" 2>&1 | tee "$output"  
 sed -i.bak "s/^--- a\//--- \.\//g;s/^+++ b\//+++ \.\//g" "$output"
 exit 0
diff --git a/gitrc/gbak.sh b/gitrc/gbak.sh
index 92880a50..0be60d68 100755
--- ./gitrc/gbak.sh
+++ ./gitrc/gbak.sh
@@ -1,6 +1,7 @@
 #!/bin/zsh
 current_branch="$(~/loadrc/gitrc/get_current_branch.sh)"
 target_branch=$(echo "$current_branch" | sed 's/\.fix$//g').bak
-local_master="$(git config gsync.branch)"
+remote="$(git config gsync.remote)"
+remote_branch="$(git config gsync.branch)"
 ~/loadrc/gitrc/gbrd.sh "$target_branch"
-git checkout -b "$target_branch" "$local_master"
+git checkout -b "$target_branch" "$remote/$remote_branch"
diff --git a/gitrc/gdit.sh b/gitrc/gdit.sh
index b9a02354..700d6af6 100755
--- ./gitrc/gdit.sh
+++ ./gitrc/gdit.sh
@@ -3,14 +3,14 @@ output="$1"
 current_branch="$(~/loadrc/gitrc/get_current_branch.sh)"
 target_branch=$(echo "$current_branch" | sed 's/\.fix$//g')
 remote="$(git config gsync.remote)"
-local_master="$(git config gsync.branch)"
+remote_branch="$(git config gsync.branch)"
 
 ~/loadrc/gitrc/discard_unnecessaries.sh
 git checkout -b "$target_branch" "$remote/$target_branch"
-git checkout -b "$target_branch" "$local_master"
+git checkout -b "$target_branch" "$remote/$remote_branch"
 git checkout -f "$target_branch"
 git branch -u "$remote/$target_branch"
-git merge -X theirs "$local_master" && \
+git merge -X theirs "$remote/$remote_branch" && \
     git pull && \
     git push ; \
     git checkout "$current_branch" && \
diff --git a/gitrc/gpl.sh b/gitrc/gpl.sh
index b372cebc..a2a0c539 100755
--- ./gitrc/gpl.sh
+++ ./gitrc/gpl.sh
@@ -14,16 +14,15 @@ done
 
 for ss in $(git config --get-all pull.from)
 do
-    remote_branch=$(echo "$ss" | sed  -e "s/\// /g")
-    COMMAND="git pull $remote_branch &"
+    pull_from=$(echo "$ss" | sed  -e "s/\// /g")
+    COMMAND="git pull $pull_from &"
     eval "$COMMAND"
 done
 
 remote=$(git config gsync.remote)
-branch=$(git config gsync.branch)
+remote_branch=$(git config gsync.branch)
+
 if [ -n "$remote" ]
 then
-    git branch "$branch" "$remote"/"$branch" &
-    git fetch "$remote" "$branch":"$branch" &
-    git merge "$branch" &
+    git merge "$remote"/"$remote_branch"
 fi
diff --git a/vimrc/.vim/bundle/vim-fugitive b/vimrc/.vim/bundle/vim-fugitive
index ec066763..affb249d 160000
--- ./vimrc/.vim/bundle/vim-fugitive
+++ ./vimrc/.vim/bundle/vim-fugitive
@@ -1 +1 @@
-Subproject commit ec0667634f8cf570df50de7242b34fa4f7d4583e
+Subproject commit affb249dd8a119da6983656f792cf7ed72d52977-dirty
diff --git a/vimrc/.vim/plugin/common.vim b/vimrc/.vim/plugin/common.vim
index c8e4b6d0..00796bc9 100644
--- ./vimrc/.vim/plugin/common.vim
+++ ./vimrc/.vim/plugin/common.vim
@@ -163,6 +163,10 @@ function! Windowdir()
     else
         let unislash = fnamemodify(bufname(winbufnr(0)), ':p:h')
 
+        if unislash =~ '^term://'
+            let unislash = getcwd()
+        endif
+
         if unislash =~ '^fugitive:/'
             let unislash = substitute(unislash, '^fugitive:\/\/', '', 'g')
             let unislash = substitute(unislash, '.git.*', '', 'g') 
diff --git a/vimrc/.vim/plugin/fugitive.vim b/vimrc/.vim/plugin/fugitive.vim
index 58aec787..14496516 100644
--- ./vimrc/.vim/plugin/fugitive.vim
+++ ./vimrc/.vim/plugin/fugitive.vim
@@ -373,8 +373,8 @@ function! s:Gdi(...) abort
             call fugitive#Diffsplit(0, 1, "vert", '', [])
         elseif tolower(arg1) == 'o'
             let remote = substitute(system("git config gsync.remote"), '\n', '', '')
-            let branch = substitute(system("git config gsync.branch"), '\n', '', '')
-            call fugitive#Diffsplit(1, 0, 'vert', remote . '/' . branch, [remote . '/' . branch])
+            let remote_branch = substitute(system("git config gsync.branch"), '\n', '', '')
+            call fugitive#Diffsplit(1, 0, 'vert', remote . '/' . remote_branch, [remote . '/' . remote_branch])
         else
             call fugitive#Diffsplit(0, 1, "vert", arg1, [arg1])
         endif
