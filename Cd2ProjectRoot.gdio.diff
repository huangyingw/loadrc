diff --git a/.gitrc b/.gitrc
index d416ab62..033bffac 100755
--- ./.gitrc
+++ ./.gitrc
@@ -65,7 +65,6 @@ alias gstl='$HOME/loadrc/gitrc/gstl.sh'
 alias gstlv='$HOME/loadrc/gitrc/gstlv.sh'
 alias gstp='$HOME/loadrc/gitrc/gstp.sh'
 alias gstv='$HOME/loadrc/gitrc/gstv.sh'
-alias gsubbr='$HOME/loadrc/gitrc/git_submodules_branch.sh'
 alias gsubmoduleUpdate='$HOME/loadrc/gitrc/submodule_update.sh'
 alias gsync='$HOME/loadrc/gitrc/gsync.sh'
 alias gtag='$HOME/loadrc/gitrc/gtag.sh'
diff --git a/.ubuntu.rc b/.ubuntu.rc
deleted file mode 100644
index 9e7032fd..00000000
--- ./.ubuntu.rc
+++ /dev/null
@@ -1 +0,0 @@
-~/loadrc/setup_pbpaste-remote.sh
diff --git a/Dockerfile b/Dockerfile
index 08e0c80b..cd9bdf55 100644
--- ./Dockerfile
+++ ./Dockerfile
@@ -4,6 +4,7 @@ ENV DEBIAN_FRONTEND noninteractive
 WORKDIR /root/loadrc
 
 COPY ./*.sh /root/loadrc/
+COPY ./neovim/*.sh /root/loadrc/neovim/
 COPY ./.ssh/id_* /root/.ssh/
 COPY ./entrypoint.sh /entrypoint.sh
 
diff --git a/bashrc/generate_files_proj.sh b/bashrc/generate_files_proj.sh
index 71ea722d..2c184654 100755
--- ./bashrc/generate_files_proj.sh
+++ ./bashrc/generate_files_proj.sh
@@ -15,6 +15,8 @@ then
     exit 1
 fi
 
+mkdir -p .git
+
 TARGETEDIR=`realpath "$PWD"`
 cp -nv ~/loadrc/prunefix_template.conf ./prunefix.conf
 cp -nv ~/loadrc/prunefile_template.conf ./prunefile.conf
diff --git a/bashrc/mirror.sh b/bashrc/mirror.sh
index 9d893982..889ade9a 100755
--- ./bashrc/mirror.sh
+++ ./bashrc/mirror.sh
@@ -12,7 +12,7 @@ TARGET=$2
 ready_file="$SOURCE"/"tmirror.ready"
 MIRRORCHECK=$HOME/loadrc/."`hostname`".mirror.check
 
-if [[ "${ready_file}" != *":"* ]] && [[ ! -f ${ready_file} ]]
+if [ ! -f ${ready_file} ]
 then
     echo -e "${red}tmirror must be run before mirror ... ${NC}"
     exit 1
diff --git a/bashrc/remove_path.sh b/bashrc/remove_path.sh
new file mode 100644
index 00000000..10e89a8a
--- /dev/null
+++ ./bashrc/remove_path.sh
@@ -0,0 +1,6 @@
+#!/bin/zsh
+SCRIPT=$(realpath "$0")
+SCRIPTPATH=$(dirname "$SCRIPT")
+cd "$SCRIPTPATH"
+
+export PATH=$(echo $PATH | tr ":" "\n" | grep -v "anaconda3" | tr "\n" ":")
diff --git a/gitrc/git_submodules_branch.sh b/gitrc/git_submodules_branch.sh
deleted file mode 100755
index 538f2109..00000000
--- ./gitrc/git_submodules_branch.sh
+++ /dev/null
@@ -1,2 +0,0 @@
-#!/bin/zsh
-git submodule foreach git branch
diff --git a/install_prerequisite.sh b/install_prerequisite.sh
index 49656e55..b4469c8f 100755
--- ./install_prerequisite.sh
+++ ./install_prerequisite.sh
@@ -4,7 +4,8 @@ apt-get update
 apt-get install -y \
     mosh \
     ssh \
-    tmux
+    tmux \
+    zsh
 
 ./deploy_configurations.sh
 
diff --git a/neovim b/neovim
index 5931cffd..2cf74f03 160000
--- ./neovim
+++ ./neovim
@@ -1 +1 @@
-Subproject commit 5931cffd46149d011ff40a49758ed8afcf47f9d7
+Subproject commit 2cf74f03eb3e91446a4e5c40e235fbe57d93508d
diff --git a/setup_pbpaste-remote.sh b/setup_pbpaste-remote.sh
index b385cdc6..5351f6c9 100755
--- ./setup_pbpaste-remote.sh
+++ ./setup_pbpaste-remote.sh
@@ -3,8 +3,6 @@ SCRIPT=$(realpath "$0") && \
     SCRIPTPATH=$(dirname "$SCRIPT") && \
     cd "$SCRIPTPATH" || cd ~/loadrc/
 
-mkdir -p ~/bin/
-
 if [ -f ~/bin/pbpaste-remote ]
 then
     exit 0
diff --git a/vimrc/.vim/bundle/vim-autoformat b/vimrc/.vim/bundle/vim-autoformat
index c395bf31..c323dc37 160000
--- ./vimrc/.vim/bundle/vim-autoformat
+++ ./vimrc/.vim/bundle/vim-autoformat
@@ -1 +1 @@
-Subproject commit c395bf31769baf4ccaf4d6e255038c375a1672bb
+Subproject commit c323dc3740fb2cda58e1997223fc1c8c6af67c63
diff --git a/vimrc/.vim/bundle/vim-fugitive b/vimrc/.vim/bundle/vim-fugitive
index e25881c6..9f628278 160000
--- ./vimrc/.vim/bundle/vim-fugitive
+++ ./vimrc/.vim/bundle/vim-fugitive
@@ -1 +1 @@
-Subproject commit e25881c6abcb2f802d242fe419e5b50ceeacf922
+Subproject commit 9f6282784bcda07ab2e235b932a3196d059ccfb4
diff --git a/vimrc/.vim/plugin/ShowVITAG.vim b/vimrc/.vim/plugin/ShowVITAG.vim
index 7d7359a3..eba2ce93 100644
--- ./vimrc/.vim/plugin/ShowVITAG.vim
+++ ./vimrc/.vim/plugin/ShowVITAG.vim
@@ -1,4 +1,6 @@
 function! ShowVITAG()
+    call Cd2Worktree()
+    echom 'getcwd --> ' . getcwd()
     call Cd2ProjectRoot("files.proj")
     call OpenOrSwitch('files.proj', 'vs')
 endfunction
diff --git a/vimrc/.vim/plugin/common.vim b/vimrc/.vim/plugin/common.vim
index 63869eb8..68eaf2d0 100644
--- ./vimrc/.vim/plugin/common.vim
+++ ./vimrc/.vim/plugin/common.vim
@@ -263,7 +263,9 @@ function! Filter2Findresult()
 endfunc
 
 function! Cd2ProjectRoot(filename)
-    let csdbpath = Find_in_parent(a:filename, Windowdir(), "/")
+    echom 'Windowdir --> ' . Windowdir()
+    let csdbpath = Find_in_parent(a:filename, getcwd(), "/")
+    echom 'csdbpath --> ' . csdbpath
 
     if csdbpath != "Nothing"
         exec "cd " . csdbpath
diff --git a/vimrc/.vim/plugin/fugitive.vim b/vimrc/.vim/plugin/fugitive.vim
index 7f4cdf8e..cd6d7554 100644
--- ./vimrc/.vim/plugin/fugitive.vim
+++ ./vimrc/.vim/plugin/fugitive.vim
@@ -1,4 +1,3 @@
-command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject ApplyBranch :execute s:ApplyBranch(<q-args>)
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject BinaryGrep :execute s:BinaryGrep(<f-args>)
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject CatDu :execute s:CatDu(<f-args>)
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject CatMove :execute s:CatMove(<f-args>)
@@ -35,13 +34,11 @@ command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gdi :e
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gdi2 :execute s:Gdi2(<f-args>)
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gdif :execute s:Gdif(<f-args>)
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gdio :execute s:Gdio(<f-args>)
-command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gdit :execute s:Gdit()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject GenerateIpynb :execute s:GenerateIpynb()
+command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gdit :execute s:Gdit()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gfix :execute s:Gfix()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gicb :execute s:Gicb()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gitk :execute s:Gitk(<f-args>)
-command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gkd :execute s:Gkd(<f-args>)
-command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gkdo :execute s:Gkdo()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Glf :execute s:Glf()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Glg :execute s:Glg()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gmet :execute s:Gmet()
@@ -55,7 +52,7 @@ command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Grtv :
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gs :execute s:Gs()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gsave :execute s:Gsave()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gshow :execute s:Gshow(<q-args>)
-command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gsubbr :execute s:Gsubbr()
+command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject ApplyBranch :execute s:ApplyBranch(<q-args>)
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gst :execute s:Gst()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gsti :execute s:Gsti()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gstl :execute s:Gstl()
@@ -64,11 +61,13 @@ command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gstp :
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gstv :execute s:Gstv(<q-args>)
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gsync :execute s:Gsync()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gtg :execute s:Gtg()
+command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gkd :execute s:Gkd(<f-args>)
+command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gkdo :execute s:Gkdo()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Gwap :execute s:Gwap()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Hdi :execute s:Hdi()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Jformat :execute s:Jformat()
-command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject KdiffFile :execute s:KdiffFile()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject LcTest :execute s:LcTest()
+command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject KdiffFile :execute s:KdiffFile()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject LogFilter :execute s:LogFilter(<f-args>)
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Prune :execute s:Prune()
 command! -bang -bar -nargs=* -complete=customlist,fugitive#CompleteObject Reapply :execute s:Reapply()
@@ -531,13 +530,6 @@ function! s:Gshow(args, ...) abort
     call OpenOrSwitch(output, 'vs')
 endfunction
 
-function! s:Gsubbr() abort
-    let worktree = Cd2Worktree()
-    let output = 'git_submodules_branch.log'
-    silent exec '!~/loadrc/gitrc/git_submodules_branch.sh 2>&1 | tee ' . output
-    call OpenOrSwitch(output, 'vs')
-endfunction
-
 function! s:Copy(...) abort
     let newFile = (a:0 >= 1) ? a:1 : expand("%:p") . '.bak'
     exec '!rm ' . newFile
