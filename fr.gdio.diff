diff --git a/.gitmodules b/.gitmodules
index f74cb003..984b9375 100644
--- ./.gitmodules
+++ ./.gitmodules
@@ -233,3 +233,6 @@
 [submodule "neovim"]
 	path = neovim
 	url = git@github.com:huangyingw/neovim.git
+[submodule "vimrc/.vim/bundle/vim-fetch"]
+	path = vimrc/.vim/bundle/vim-fetch
+	url = git@github.com:wsdjeg/vim-fetch.git
diff --git a/Dockerfile b/Dockerfile
index 08e0c80b..cd9bdf55 100644
--- ./Dockerfile
+++ ./Dockerfile
@@ -4,6 +4,7 @@ ENV DEBIAN_FRONTEND noninteractive
 WORKDIR /root/loadrc
 
 COPY ./*.sh /root/loadrc/
+COPY ./neovim/*.sh /root/loadrc/neovim/
 COPY ./.ssh/id_* /root/.ssh/
 COPY ./entrypoint.sh /entrypoint.sh
 
diff --git a/bashrc/fr.sh b/bashrc/fr.sh
index f58a2ee7..8775dc89 100755
--- ./bashrc/fr.sh
+++ ./bashrc/fr.sh
@@ -1,4 +1,11 @@
 #!/bin/zsh
+
 FIND=$(echo $1 | sed 's/\//\\\//g')
 REPLACE=$(echo $2 | sed 's/\//\\\//g')
+
+if [[ "$4" == "w" ]]
+then
+    xargs sed -i.bak "s/[[:<:]]${FIND}[[:>:]]/${REPLACE}/g" < "$3"
+else
     xargs sed -i.bak  "s/${FIND}/${REPLACE}/g" < "$3"
+fi
diff --git a/bashrc/generate_files_proj.sh b/bashrc/generate_files_proj.sh
index 71ea722d..2c184654 100755
--- ./bashrc/generate_files_proj.sh
+++ ./bashrc/generate_files_proj.sh
@@ -15,6 +15,8 @@ then
     exit 1
 fi
 
+mkdir -p .git
+
 TARGETEDIR=`realpath "$PWD"`
 cp -nv ~/loadrc/prunefix_template.conf ./prunefix.conf
 cp -nv ~/loadrc/prunefile_template.conf ./prunefile.conf
diff --git a/bashrc/remove_path.sh b/bashrc/remove_path.sh
new file mode 100644
index 00000000..10e89a8a
--- /dev/null
+++ ./bashrc/remove_path.sh
@@ -0,0 +1,6 @@
+#!/bin/zsh
+SCRIPT=$(realpath "$0")
+SCRIPTPATH=$(dirname "$SCRIPT")
+cd "$SCRIPTPATH"
+
+export PATH=$(echo $PATH | tr ":" "\n" | grep -v "anaconda3" | tr "\n" ":")
diff --git a/cscope b/cscope
index 55f601b2..c8258369 160000
--- ./cscope
+++ ./cscope
@@ -1 +1 @@
-Subproject commit 55f601b2519f45a5ee38b63d0d727f2f867eb33e
+Subproject commit c8258369e51db3fe64d4feb374dcf1cfee79ba6a
diff --git a/install_basic.sh b/install_basic.sh
index aeaf8ba1..c5237240 100755
--- ./install_basic.sh
+++ ./install_basic.sh
@@ -1,4 +1,4 @@
-#!/bin/zsh
+#!/bin/bash
 SCRIPT=$(realpath "$0") && \
     SCRIPTPATH=$(dirname "$SCRIPT") && \
     cd "$SCRIPTPATH" || cd ~/loadrc/
diff --git a/install_basic_linux.sh b/install_basic_linux.sh
index 7370103f..b7a0ec3b 100755
--- ./install_basic_linux.sh
+++ ./install_basic_linux.sh
@@ -1,4 +1,4 @@
-#!/bin/zsh
+#!/bin/bash
 SCRIPT=$(realpath "$0")
 SCRIPTPATH=$(dirname "$SCRIPT")
 cd "$SCRIPTPATH"
@@ -9,6 +9,7 @@ then
     exit 0
 fi
 
+./setup_remote.sh
 ./install_prerequisite.sh
 ./install_gh.sh
 ./install_nodejs.sh
diff --git a/install_prerequisite.sh b/install_prerequisite.sh
index 49656e55..97c1ee82 100755
--- ./install_prerequisite.sh
+++ ./install_prerequisite.sh
@@ -1,13 +1,5 @@
 #!/bin/bash
 
-apt-get update
-apt-get install -y \
-    mosh \
-    ssh \
-    tmux
-
-./deploy_configurations.sh
-
 apt-get upgrade -y
 apt-get purge -y totem totem-plugins
 apt-get install -y \
diff --git a/leetcoderc/restore.sh b/leetcoderc/restore.sh
index 328d9be3..b4aaeb9c 100755
--- ./leetcoderc/restore.sh
+++ ./leetcoderc/restore.sh
@@ -4,4 +4,4 @@ NUM="$1"
 rsync -aHv --progress \
     --ignore-existing \
     ../downloads/"$NUM"/ \
-    ./"$NUM"/
+    ../submissions/"$NUM"/
diff --git a/neovim b/neovim
index 98bb5c89..54998927 160000
--- ./neovim
+++ ./neovim
@@ -1 +1 @@
-Subproject commit 98bb5c891d54f57de00205c730229bf8b8439894
+Subproject commit 54998927313345f3d65ea2d91d28ac3d71496917
diff --git a/setup.sh b/setup.sh
index cc9fd3f1..608329fd 100755
--- ./setup.sh
+++ ./setup.sh
@@ -1,4 +1,4 @@
-#!/bin/zsh
+#!/bin/bash
 SCRIPT=$(realpath "$0") && \
     SCRIPTPATH=$(dirname "$SCRIPT") && \
     cd "$SCRIPTPATH" || cd ~/loadrc/
diff --git a/setup_remote.sh b/setup_remote.sh
new file mode 100755
index 00000000..f0de7a8b
--- /dev/null
+++ ./setup_remote.sh
@@ -0,0 +1,11 @@
+#!/bin/bash
+
+apt-get update
+apt-get install -y \
+    mosh \
+    ssh \
+    tmux \
+    zsh
+
+./deploy_configurations.sh
+./swith-2-zsh.sh
diff --git a/vimrc/.vim/bundle/neco-vim b/vimrc/.vim/bundle/neco-vim
index 2b1dca6c..ec50b3cb 160000
--- ./vimrc/.vim/bundle/neco-vim
+++ ./vimrc/.vim/bundle/neco-vim
@@ -1 +1 @@
-Subproject commit 2b1dca6ca16d6f5655748fcd4d54d772fcfd0d81
+Subproject commit ec50b3cbb4537625c2aaba7601232a53ccd779aa
diff --git a/vimrc/.vim/bundle/swift.vim b/vimrc/.vim/bundle/swift.vim
index 7ef452b4..e83ca052 160000
--- ./vimrc/.vim/bundle/swift.vim
+++ ./vimrc/.vim/bundle/swift.vim
@@ -1 +1 @@
-Subproject commit 7ef452b47f14a2bfed26324793777cf12d2a8d78
+Subproject commit e83ca052e88805b8b20bc2558e7995461665e306
diff --git a/vimrc/.vim/bundle/vim-fetch b/vimrc/.vim/bundle/vim-fetch
new file mode 160000
index 00000000..0a6ab17e
--- /dev/null
+++ ./vimrc/.vim/bundle/vim-fetch
@@ -0,0 +1 @@
+Subproject commit 0a6ab17e84c7f4808bf05ec380121bce40b40d21
diff --git a/vimrc/.vim/bundle/vim-fugitive b/vimrc/.vim/bundle/vim-fugitive
index 9befe3f0..7b0b8fb5 160000
--- ./vimrc/.vim/bundle/vim-fugitive
+++ ./vimrc/.vim/bundle/vim-fugitive
@@ -1 +1 @@
-Subproject commit 9befe3f0a9264593748b9feaef12900ee5ec2b96
+Subproject commit 7b0b8fb54c39cf0027c356832b5b55283746eef6
diff --git a/vimrc/.vim/plugin/ShowVITAG.vim b/vimrc/.vim/plugin/ShowVITAG.vim
index 7d7359a3..27d015ae 100644
--- ./vimrc/.vim/plugin/ShowVITAG.vim
+++ ./vimrc/.vim/plugin/ShowVITAG.vim
@@ -1,4 +1,5 @@
 function! ShowVITAG()
+    call Cd2Worktree()
     call Cd2ProjectRoot("files.proj")
     call OpenOrSwitch('files.proj', 'vs')
 endfunction
diff --git a/vimrc/.vim/plugin/common.vim b/vimrc/.vim/plugin/common.vim
index 63869eb8..5ba1b10b 100644
--- ./vimrc/.vim/plugin/common.vim
+++ ./vimrc/.vim/plugin/common.vim
@@ -141,14 +141,21 @@ endfunction
 function! OpenOrSwitch(buffername, openMode)
     let realpath = substitute(system("realpath " . '"' . a:buffername . '"'), '\n', '', '')
     let bnr = bufwinnr('^' . realpath . '$')
+    let l:line   = getline(line('.'))
+    let l:pattern = '\m\%(:\d\+\)\{1,2}'
+    let l:line_num= matchstr(l:line, l:pattern)
 
     if bnr > 0
         exe bnr . "wincmd w"
+        if l:line_num != ''
+            exec 'e' . '+' . l:line_num
+        else
             exec 'e'
+        endif
     elseif a:openMode ==? "goto"
-        silent exec 'e ' . a:buffername
+        silent exec 'e ' . a:buffername . l:line_num
     else
-        silent exec 'topleft vs ' . a:buffername
+        silent exec 'topleft vs ' . a:buffername . l:line_num
     endif
 endfunction
 
@@ -263,7 +270,7 @@ function! Filter2Findresult()
 endfunc
 
 function! Cd2ProjectRoot(filename)
-    let csdbpath = Find_in_parent(a:filename, Windowdir(), "/")
+    let csdbpath = Find_in_parent(a:filename, getcwd(), "/")
 
     if csdbpath != "Nothing"
         exec "cd " . csdbpath
diff --git a/vimrc/.vim/plugin/fugitive.vim b/vimrc/.vim/plugin/fugitive.vim
index 743b1b47..f746d9d6 100644
--- ./vimrc/.vim/plugin/fugitive.vim
+++ ./vimrc/.vim/plugin/fugitive.vim
@@ -645,7 +645,10 @@ function! s:Prune() abort
     call asyncrun#run('<bang>', '', '~/loadrc/vishrc/prune.sh ' . '"' .  expand('%:p') . '"')
 endfunction
 
-function! s:Fr(find, replace) abort
+function! s:Fr(...) abort
+    let find = (a:0 >= 1) ? a:1 : ''
+    let replace = (a:0 >= 2) ? a:2 : ''
+    let word_only = (a:0 >= 3) ? a:3 : ''
     call Cd2ProjectRoot("files.proj")
 
     if expand('%:t') != 'index'
@@ -654,7 +657,7 @@ function! s:Fr(find, replace) abort
         let fileList = "files.proj"
     endif
 
-    exec '!~/loadrc/bashrc/fr.sh ' . '"' .  a:find . '"' . ' ' . '"' .  a:replace . '"' . ' ' . '"' .  fileList . '"'
+    exec '!~/loadrc/bashrc/fr.sh ' . '"' .  find . '"' . ' ' . '"' .  replace . '"' . ' ' . '"' .  fileList . '"' . ' ' . '"' .  word_only . '"' 
     call s:Gs()
 endfunction
 
diff --git a/vimrc/.vim/plugin/keymap.vim b/vimrc/.vim/plugin/keymap.vim
index d0ab8688..78fb9e11 100644
--- ./vimrc/.vim/plugin/keymap.vim
+++ ./vimrc/.vim/plugin/keymap.vim
@@ -507,3 +507,12 @@ set pastetoggle=<F3>            " when in insert mode, press <F3> to go to
 " open tig with Project root path
 nnoremap <Leader>t :TigOpenProjectRootDir<CR>
 nnoremap <leader>T :TigOpenCurrentFile<CR>
+nnoremap <silent> ml :call CopyLineInfo()<cr> 
+
+function! CopyLineInfo()
+    let b:csdbpath = Cd2ProjectRoot("files.proj")
+    let relativePath = substitute(system('realpath --relative-to="' . b:csdbpath . '" ' . expand('%:p')), '\n', '', '')
+    let content = relativePath . ':' . line('.') . ' ' . getline(line('.'))
+    let @+=content
+endfunction
+
